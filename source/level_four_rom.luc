module level_four_rom (
    input rngeezus [2],
    output player_initial_position [8][8],
    output player_reg_selector[3],
    output end_position [8][8],
    output walls[8][8],
    output tokens[8][8]
  ) {

  /*
  ROM file that stores map values --> Position of tokens and walls
  Each time player enters a new level we will pick a stage at random
  from these values
  */
  always {
    player_initial_position[0] = 8b10000000;
    player_initial_position[7:1] = 7x{{8b0}};
    player_reg_selector = 3b000;
    end_position[6:0] = 7x{{8b0}};
    end_position[7] = 8b00000001;
    
    tokens[0] = 8b00100010;
    tokens[1] = 8b00000000;
    tokens[2] = 8b10000000;
    tokens[3] = 8b00000000;
    tokens[4] = 8b01000000;
    tokens[5] = 8b00000000;
    tokens[6] = 8b00000000;
    tokens[7] = 8b00000010;
    
    walls[0] = 8b01001100;
    walls[1] = 8b01100110;
    walls[2] = 8b00000000;
    walls[3] = 8b10000000;
    walls[4] = 8b10100000;
    walls[5] = 8b00000001;
    walls[6] = 8b00000001;
    walls[7] = 8b10000000;
    
    /*
    case(rngeezus){
      b00:
        tokens[0] = 8b00100010;
        tokens[1] = 8b00000000;
        tokens[2] = 8b10000000;
        tokens[3] = 8b00000000;
        tokens[4] = 8b01000000;
        tokens[5] = 8b00000000;
        tokens[6] = 8b00000000;
        tokens[7] = 8b00000010;
        
        walls[0] = 8b01001100;
        walls[1] = 8b01100110;
        walls[2] = 8b00000000;
        walls[3] = 8b10000000;
        walls[4] = 8b10100000;
        walls[5] = 8b00000001;
        walls[6] = 8b00000001;
        walls[7] = 8b10000000;
        
      b01:
        tokens[0] = 8b00000000;
        tokens[1] = 8b00100010;
        tokens[2] = 8b00000000;
        tokens[3] = 8b10000000;
        tokens[4] = 8b01000010;
        tokens[5] = 8b00000000;
        tokens[6] = 8b00000000;
        tokens[7] = 8b00000000;

        walls[0] = 8b00000001;
        walls[1] = 8b11010101;
        walls[2] = 8b00010000;
        walls[3] = 8b00110000;
        walls[4] = 8b10100000;
        walls[5] = 8b10001000;
        walls[6] = 8b00010001;
        walls[7] = 8b00000000;
        
      b10:
        tokens[0] = 8b00000001;
        tokens[1] = 8b00000100;
        tokens[2] = 8b10010000;
        tokens[3] = 8b00001000;
        tokens[4] = 8b00000000;
        tokens[5] = 8b00000000;
        tokens[6] = 8b00000000;
        tokens[7] = 8b00000000;

        walls[0] = 8b00000100;
        walls[1] = 8b11000001;
        walls[2] = 8b00101100;
        walls[3] = 8b10000100;
        walls[4] = 8b10000000;
        walls[5] = 8b00000110;
        walls[6] = 8b01000010;
        walls[7] = 8b00100010;
        
      b11:
        tokens[0] = 8b00000010;
        tokens[1] = 8b00000000;
        tokens[2] = 8b00001000;
        tokens[3] = 8b00000000;
        tokens[4] = 8b00000001;
        tokens[5] = 8b00000000;
        tokens[6] = 8b00000010;
        tokens[7] = 8b10000000;

        walls[0] = 8b00000001;
        walls[1] = 8b00010000;
        walls[2] = 8b00000101;
        walls[3] = 8b00000000;
        walls[4] = 8b00000000;
        walls[5] = 8b00000110;
        walls[6] = 8b11000000;
        walls[7] = 8b00000010;
        
      default:
        tokens[0] = 8b00100010;
        tokens[1] = 8b00000000;
        tokens[2] = 8b10000000;
        tokens[3] = 8b00000000;
        tokens[4] = 8b01000000;
        tokens[5] = 8b00000000;
        tokens[6] = 8b00000000;
        tokens[7] = 8b00000010;
        
        walls[0] = 8b01001100;
        walls[1] = 8b01100110;
        walls[2] = 8b00000000;
        walls[3] = 8b10000000;
        walls[4] = 8b10100000;
        walls[5] = 8b00000001;
        walls[6] = 8b00000001;
        walls[7] = 8b10000000;
    }
    */
  }
}
